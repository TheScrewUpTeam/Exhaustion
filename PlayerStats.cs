using System.Collections.Generic;
using VRage.Game;
using VRage.Game.ModAPI;

namespace Keyspace.Stamina
{
    class PlayerStats
    {
        public float Stamina { get; set; }

        public PlayerStats(float stamina)
        {
            Stamina = stamina;
        }

        public PlayerStats()
        {
            Stamina = 1.0f;
        }

        public void Recalculate(IMyPlayer player)
        {
            Stamina += MovementCosts.Map[player.Character.CurrentMovementState];
        }
    }

    static class MovementCosts
    {
        // TODO: configurable!
        private const float GAIN_HIGH =  1.0f;
        private const float GAIN_MED  =  0.25f;
        private const float GAIN_LOW  =  0.05f;
        private const float COST_NONE =  0.0f;
        private const float COST_LOW  = -0.05f;
        private const float COST_MED  = -0.25f;
        private const float COST_HIGH = -1.0f;

        internal static readonly Dictionary<MyCharacterMovementEnum, float> Map
            = new Dictionary<MyCharacterMovementEnum, float>
            {
                // Enum values generated by MSVS2019 drom:
                // Assembly VRage.Game, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
                // C:\Program Files (x86)\Steam\steamapps\common\SpaceEngineers\Bin64\VRage.Game.dll
                { MyCharacterMovementEnum.Standing,                GAIN_LOW  },
                { MyCharacterMovementEnum.Sitting,                 GAIN_HIGH },
                { MyCharacterMovementEnum.Crouching,               GAIN_MED  },
                { MyCharacterMovementEnum.Flying,                  COST_NONE },
                { MyCharacterMovementEnum.Falling,                 GAIN_HIGH },
                { MyCharacterMovementEnum.Jump,                    COST_HIGH },
                { MyCharacterMovementEnum.Died,                    COST_NONE },
                { MyCharacterMovementEnum.Ladder,                  COST_NONE },
                { MyCharacterMovementEnum.Walking,                 COST_LOW  },
                { MyCharacterMovementEnum.CrouchWalking,           COST_MED  },
                { MyCharacterMovementEnum.BackWalking,             COST_LOW  },
                { MyCharacterMovementEnum.CrouchBackWalking,       COST_MED  },
                { MyCharacterMovementEnum.WalkStrafingLeft,        COST_LOW  },
                { MyCharacterMovementEnum.CrouchStrafingLeft,      COST_MED  },
                { MyCharacterMovementEnum.WalkingLeftFront,        COST_LOW  },
                { MyCharacterMovementEnum.CrouchWalkingLeftFront,  COST_MED  },
                { MyCharacterMovementEnum.WalkingLeftBack,         COST_LOW  },
                { MyCharacterMovementEnum.CrouchWalkingLeftBack,   COST_MED  },
                { MyCharacterMovementEnum.WalkStrafingRight,       COST_LOW  },
                { MyCharacterMovementEnum.CrouchStrafingRight,     COST_MED  },
                { MyCharacterMovementEnum.WalkingRightFront,       COST_LOW  },
                { MyCharacterMovementEnum.CrouchWalkingRightFront, COST_MED  },
                { MyCharacterMovementEnum.WalkingRightBack,        COST_LOW  },
                { MyCharacterMovementEnum.CrouchWalkingRightBack,  COST_MED  },
                { MyCharacterMovementEnum.LadderUp,                COST_LOW  },
                { MyCharacterMovementEnum.LadderDown,              COST_LOW  },
                { MyCharacterMovementEnum.Running,                 COST_MED  },
                { MyCharacterMovementEnum.Backrunning,             COST_MED  },
                { MyCharacterMovementEnum.RunStrafingLeft,         COST_MED  },
                { MyCharacterMovementEnum.RunningLeftFront,        COST_MED  },
                { MyCharacterMovementEnum.RunningLeftBack,         COST_MED  },
                { MyCharacterMovementEnum.RunStrafingRight,        COST_MED  },
                { MyCharacterMovementEnum.RunningRightFront,       COST_MED  },
                { MyCharacterMovementEnum.RunningRightBack,        COST_MED  },
                { MyCharacterMovementEnum.Sprinting,               COST_HIGH },
                { MyCharacterMovementEnum.RotatingLeft,            COST_NONE },
                { MyCharacterMovementEnum.CrouchRotatingLeft,      COST_LOW  },
                { MyCharacterMovementEnum.RotatingRight,           COST_NONE },
                { MyCharacterMovementEnum.CrouchRotatingRight,     COST_LOW  },
                { MyCharacterMovementEnum.LadderOut,               COST_NONE }
            };
    }
}
